{"version":3,"sources":["containers/Header.js","containers/Footer.js","components/Grid.js","containers/navigator/NavigatorWrapper.js","pages/Form.js","pages/FormValidation.js","components/Layout.js","containers/Navigator.js","containers/AppWrapper.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","href","index_es","icon","faBars","size","style","color","faUser","Component","Footer","className","NavigatorWrapper","component","containers_Header","containers_Footer","GeneralInformation","htmlFor","id","for","type","FormValidation","Form","Layout","MonthPicker","RangePicker","WeekPicker","hinter_first","hinter_Second","duration","start_date","end_date","onChange","date","dateString","alert","onHintStartDate","setState","onHintEtartDate","onMouseleaveHinterFirst","onMouseleaveHinterSecond","_this$state","message","info","padding","date_picker","onMouseEnter","onMouseLeave","es_button","marginLeft","paddingLeft","paddingRight","Navigatgor","_this2","react_router","exact","path","routeProps","navigator_NavigatorWrapper","assign","components_Layout","pages_FormValidation","AppWrapper","Navigator","library","add","faStroopwafel","App","containers_AppWrapper","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.23279040.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faBars } from '@fortawesome/free-solid-svg-icons'\n\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n  \n    return (\n      \n      <div >\n        <div >\n          <div >\n            <div >\n            <a href=\"/\"> <FontAwesomeIcon icon={faBars} size=\"3x\" style={{color:\"black\"}}/></a>\n            </div>\n            <div >SMS Coding Challenge</div>\n            <div >\n             <a href=\"https://musafadul.github.io/SMS-Frontend/form\">  <FontAwesomeIcon icon={faUser} size=\"3x\" style={{color:\"black\"}}/> </a> \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\n\nclass Footer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"footer\">\n        <hr />\n        <div className=\"row \">\n          <div className=\"col-lg-8 offset-lg-2\">\n            <ul className=\"footer__languages\">\n              <li>\n                <a >German</a>\n              </li>\n              <li>\n                <a >English</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\r\n\r\n\r\nclass Grid extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n\r\n  \r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div className=\"dashboard u-padding-vertical-large\">\r\n        bgbgb\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grid;\r\n","import React, { Component } from \"react\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\n\n\nclass NavigatorWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n   \n    const { component } = this.props;\n    return (\n      <div className=\"navigation\">\n        <header>\n          <Header {...this.props} />\n        </header>\n        {component}\n        <footer>\n          <Footer {...this.props} />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default NavigatorWrapper;\n","import React, { Component } from \"react\";\n\nclass GeneralInformation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleFormControlSelect1\">Category *</label>\n          <select className=\"form-control\" id=\"exampleFormControlSelect1\">\n            <option>Choose ...</option>\n            <option>Flat</option>\n            <option>House</option>\n            <option>Land</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleFormControlSelect2\">Offer Type *</label>\n          <select className=\"form-control\" id=\"exampleFormControlSelect2\">\n            <option>Choose ...</option>\n            <option>Rent</option>\n            <option>Sell</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleFormControlSelect2\">Condition *</label>\n          <select className=\"form-control\" id=\"exampleFormControlSelect2\">\n            <option>Choose ...</option>\n            <option>Furnished</option>\n            <option>Un-furnished</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label for=\"inputZip\">Size (sqm)</label>\n          <input type=\"text\" className=\"form-control\" id=\"inputZip\" />\n        </div>\n        <div className=\"row\">\n          <div className=\"col col-sm-6\">\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlSelect2\">Available from</label>\n              <select className=\"form-control\" id=\"exampleFormControlSelect2\">\n                <option>Choose ...</option>\n                <option>Furnished</option>\n                <option>Un-furnished</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"col col-sm-6\">\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlSelect2\">To</label>\n              <select className=\"form-control\" id=\"exampleFormControlSelect2\">\n                <option>Choose ...</option>\n                <option>Furnished</option>\n                <option>Un-furnished</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default GeneralInformation;\n","import React, { Component } from \"react\";\n\nimport Form from \"./Form\";\n\n\nclass FormValidation extends Component {\n \n  render() {\n   \n    return (\n      <Form />\n    );\n  }\n}\n\nexport default FormValidation;\n","import React, { Component } from \"react\";\r\nimport { DatePicker, Button, Alert, message } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\r\nconst dateFormat = 'YYYY-MM-DD';\r\nclass Layout extends Component {\r\n  \r\n  state = {\r\n    hinter_first: false,\r\n    hinter_Second: false,\r\n    duration:0.6,\r\n    start_date :'',\r\n    end_date:''\r\n  };\r\n\r\n  onChange = (date, dateString)=> {\r\n    //var startDateString = dateString;\r\n    //var startDateStrin = startDateString.split(\",\");\r\n  alert(dateString);\r\n}\r\n\r\n  onHintStartDate = ()=> {\r\n    this.setState({\r\n      hinter_first : true\r\n    })\r\n  }\r\n\r\n  onHintEtartDate = ()=> {\r\n    this.setState({\r\n      hinter_Second : true\r\n    })\r\n  }\r\n\r\n  onMouseleaveHinterFirst = ()=> {\r\n    this.setState({\r\n      hinter_first : false\r\n    })\r\n  }\r\n\r\n  onMouseleaveHinterSecond = ()=> {\r\n    this.setState({\r\n      hinter_Second : false\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { hinter_first, hinter_Second, duration } = this.state;\r\n      let hint = null;\r\n      if(hinter_first){\r\n        message.info('Select Start Date', duration);\r\n      }else if(hinter_Second){\r\n        message.info('Select End Date', duration);\r\n      }\r\n    return (\r\n      <div style={{padding:\"20px\"}} >\r\n        <DatePicker  onChange={this.onChange} \r\n                      size=\"default\" \r\n                      onMouseEnter={this.onHintStartDate} \r\n                      onMouseLeave={this.onMouseleaveHinterFirst}>Start Date</DatePicker>\r\n        <DatePicker  onChange={this.onChange} \r\n                      size=\"default\" \r\n                      onMouseEnter={this.onHintEtartDate} \r\n                      onMouseLeave={this.onMouseleaveHinterSecond}/>\r\n        <Button type=\"primary\" style={{marginLeft:\"50px\",paddingLeft:\"30px\",paddingRight:\"30px\"}} size=\"large\">Filter</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Grid from '../components/Grid'\nimport NavigatorWrapper from \"./navigator/NavigatorWrapper\";\nimport FormValidation from '../pages/FormValidation';\nimport Layout from '../components/Layout';\n\nclass Navigatgor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          component={routeProps => (\n            <NavigatorWrapper\n              component={<Layout {...routeProps} {...this.props} />}\n              {...routeProps}\n              {...this.props}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"https://musafadul.github.io/SMS-Frontend/form\"\n          component={routeProps => (\n            <NavigatorWrapper\n              component={<FormValidation {...routeProps} {...this.props} />}\n              {...routeProps}\n              {...this.props}\n            />\n          )}\n        />\n      </Switch>\n    );\n  }\n}\n\nexport default Navigatgor;\n","import React, { Component } from \"react\";\n\n\nimport Navigator from \"../containers/Navigator\";\n\n\n\nclass AppWrapper extends Component {\n\n  render() {\n   \n    return (\n     \n        <Navigator />\n      \n    );\n  }\n}\n\nexport default AppWrapper;\n","import React, { Component } from \"react\";\nimport Header from './containers/Header'\nimport AppWraper from './containers/AppWrapper'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faStroopwafel)\n\n\n\n\n\n\nclass App extends Component {\n  render() {\n   \n    return (\n      <div className=\"App\"> \n        <AppWraper/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n<BrowserRouter basename={process.env.PUBLIC_URL} ><App/></BrowserRouter>, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}