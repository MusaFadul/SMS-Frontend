{"version":3,"sources":["containers/Header.js","components/GridItem.js","components/Grid.js","containers/Footer.js","containers/navigator/NavigatorWrapper.js","pages/Form.js","pages/FormValidation.js","components/Layout.js","containers/Navigator.js","App.js","store/reducer.js","serviceWorker.js","index.js"],"names":["Header","state","mouseEnterFaBar","mouseEnterFaUser","_this2","this","_this$state","styleColor1","color","styleColor2","react_default","a","createElement","style_root","style","width","height","display","backgrounColor","padding","border","marginBottom","marginLeft","onMouseEnter","setState","onClick","props","onGrid","onMouseLeave","index_es","icon","faBars","size","className","fontWeight","onRegistration","faUser","userIcon","Component","connect","email","dispatch","type","gridItem","backgroundColor","textAlign","marginRight","childStyle","colorColumnStyle","gridHeader","marginTop","row","col","span","city","start_date","end_date","price","status","Grid","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","initLoading","loading","list","filter","dataSource","stDate","Date","edDate","filterdList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","singleItem","value","singleItemStDate","singleItemEdDate","valueOf","push","err","return","dataList","loadMore","onDataFilter","GridItem","length","es_alert","message","description","closable","showIcon","es_list","itemLayout","renderItem","item","Footer","NavigatorWrapper","component","containers_Header","containers_Footer","Option","RegistrationForm","auto_complete","confirmDirty","autoCompleteResult","userCredentials","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","callback","values","onRegister","success","handleConfirmBlur","target","compareToFirstPassword","rule","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","map","domain","concat","getFieldDecorator","initialValue","es_select","es_form","assign","labelCol","xs","sm","wrapperCol","onSubmit","Item","rules","required","input","prefix","placeholder","hasFeedback","validator","Password","onBlur","es_button","htmlType","React","RegForm","create","name","Content","Layout_","MonthPicker","RangePicker","WeekPicker","hinter_first","hinter_Second","duration","onFilter","onStartDateChange","date","dateString","onEndDateChange","onHintStartDate","onHintEtartDate","onMouseleaveHinterFirst","onMouseleaveHinterSecond","info","date_picker","onChange","format","paddingLeft","paddingRight","components_Grid","Navigatgor","renderContent","componentContent","Layout","Form","react_router","exact","path","routeProps","navigator_NavigatorWrapper","grid","library","add","faStroopwafel","App","Navigator","Raduim","initialState","Loading","reducer","arguments","action","objectSpread","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","react_router_dom","basename","process","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.63ce96bd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faBars } from '@fortawesome/free-solid-svg-icons';\nimport { Row, Col } from 'antd';\nimport Radium, { StyleRoot } from 'radium';\nimport { connect } from 'react-redux'\n\n\n\n\nclass Header extends Component {\n\n  state = {\n    mouseEnterFaBar : false,\n    mouseEnterFaUser:false\n  }\n  \n  render() {\n    const {mouseEnterFaBar, mouseEnterFaUser} = this.state\n      let styleColor1 = {color:\"\"}\n      let styleColor2 = {color:\"\"}\n    if(mouseEnterFaBar) {\n      styleColor1 = {color:\"red\"}\n    }\n    if(mouseEnterFaUser) {\n      styleColor2 = {color:\"red\"}\n    }\n    return (\n      <StyleRoot>\n        <div style={{width:\"100%\",height: \"100px\",display: \"flex\",backgrounColor:\"red\",padding: \"20px\",border: \"1px solid #efeaea\",marginBottom: \"10px\"}}> \n                  <div style={{marginLeft:\"20%\"}} onMouseEnter={()=>this.setState({mouseEnterFaBar:true})} onClick = {this.props.onGrid}onMouseLeave={()=>this.setState({mouseEnterFaBar : false})} >         \n                        <a> <FontAwesomeIcon icon={faBars}  size=\"3x\"   className=\"navItem\" style={styleColor1}/></a>\n                    </div>     \n                    <div   style={{marginLeft:\"20%\"}}>\n                    \n                        <h4 style={{fontWeight: \"bold\"}}>SMS Coding Challenge</h4>\n                    \n                    </div>\n                    <div style={{marginLeft:\"20%\"}}  onMouseEnter={()=>this.setState({mouseEnterFaUser:true})} onClick = {this.props.onRegistration} onMouseLeave={()=>this.setState({mouseEnterFaUser : false})}>\n                    \n                        <a >  <FontAwesomeIcon icon={faUser} size=\"3x\"  className=\"navItem\" style={styleColor2}/> </a> \n                        <p> {this.props.userIcon} </p>     \n                      </div>           \n          \n      </div>\n    </StyleRoot>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n      userIcon : state.email\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      onRegistration : () => dispatch({type: 'REGISTRATION_FORM'}),\n      onGrid : () => dispatch({type: 'GRID'})\n  };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)( Header);\n\n","import React  from \"react\";\r\nimport { Row, Col } from 'antd';\r\n\r\nconst gridItem = (props)=>{\r\n   const color = props.color\r\n    let style = {\r\n        backgroundColor : \"#00a0e9\",height:\"80px\",textAlign:'center',marginRight:\"0.1%\"\r\n    }\r\n    const childStyle = {padding:'33px',color:\"white\"}\r\n    let colorColumnStyle = {backgroundColor:'green',height:\"80px\",textAlign:'center',marginRight:\"0.1%\"}\r\n   // let colorColumn = null\r\n    if(props.gridHeader == \"true\"&props.color == \"color\"){\r\n      colorColumnStyle = style; \r\n     // colorColumn = <p style={childStyle}>{props.color}</p> \r\n    }\r\n    if(props.gridHeader == \"false\"){\r\n        style = { backgroundColor : color,height:\"80px\",textAlign:'center',marginRight:\"0.1%\"}\r\n        colorColumnStyle = {backgroundColor:color,height:\"80px\",textAlign:'center',marginRight:\"0.1%\"}\r\n        //colorColumn =null\r\n      }\r\n\r\n\r\n    const span = \"3\"\r\n\r\n    return ( \r\n        <div style={{width:\"80%\",height:\"80px\", marginLeft:\"18%\", marginTop:\"0.1%\"}}>\r\n            <Row type=\"flex\">\r\n            <Col span = {span}  style={style} >\r\n                 <p style={childStyle}> {props.city}</p>\r\n            </Col>\r\n            <Col span = {span} style={style} >\r\n             <p style={childStyle}>{props.start_date}</p>\r\n            </Col>\r\n            <Col className=\"gutter-row\" span = {span} style={style}>\r\n              <p style={childStyle}> {props.end_date}</p>\r\n            </Col>\r\n            <Col span = {span} style={style}>\r\n                <p style={childStyle}> {props.price}</p>\r\n            </Col>\r\n            <Col span = {span} style={style} >\r\n            <p style={childStyle}> {props.status}</p>\r\n            </Col>\r\n            <Col span = {span} style={colorColumnStyle} >\r\n              <p style={childStyle}>{props.color}</p>\r\n            </Col>        \r\n            </Row>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default gridItem;","import React, { Component } from \"react\";\r\nimport { List, Skeleton, Avatar, Alert } from 'antd';\r\nimport GridItem from './GridItem'\r\nimport dataSource from '../dataSource/data.json'\r\nimport { tsImportEqualsDeclaration } from \"@babel/types\";\r\nclass Grid extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      initLoading: false,\r\n      loading: false,\r\n      list: ''\r\n    };\r\n  }\r\n\r\n  async componentWillMount (){\r\n    if(!this.props.filter) {\r\n      this.setState({\r\n        list:dataSource\r\n      })\r\n    }\r\n  }\r\n\r\n  onDataFilter (){\r\n    var stDate = new Date(this.props.start_date);\r\n    var edDate = new Date(this.props.end_date);\r\n    //var edDate = new Date(this.state.list[1]).start_date;\r\n    const filterdList = []\r\n   for(let singleItem of dataSource){\r\n     const singleItemStDate = new Date(singleItem.start_date)\r\n     const singleItemEdDate = new Date(singleItem.end_date)\r\n     if( singleItemStDate.valueOf() >= stDate.valueOf() &&  singleItemEdDate.valueOf() <= edDate.valueOf()) {\r\n      filterdList.push(singleItem)\r\n     }\r\n   }\r\n   return filterdList;\r\n  }\r\n\r\n  render() {\r\n    \r\n    const {list, initLoading, loadMore} = this.state\r\n    let dataList = list;\r\n    if(this.props.filter){\r\n     dataList = this.onDataFilter();\r\n    }\r\n   \r\n    return (\r\n      <div style={{width:\"100% \",height: \"100%\"}}>\r\n        <GridItem  gridHeader = \"true\" color = \"color\"\r\n        city=\"City\"\r\n        start_date=\"start_date\"\r\n        end_date=\"end_date\"\r\n        price=\"price\"\r\n        status=\"status\"/>\r\n        {dataList.length === 0 ?  <Alert\r\n        message=\"No Data\"\r\n        description=\" Please Select Proper Date Range\"\r\n        type=\"warning\"\r\n        closable\r\n        showIcon\r\n        /> : null}\r\n        <List\r\n         loading={initLoading}\r\n        itemLayout=\"horizontal\"\r\n        dataSource={dataList}\r\n        renderItem={item => (    \r\n          <GridItem gridHeader=\"false\"\r\n          city={item.city}\r\n          start_date={item.start_date} \r\n          end_date={item.end_date} \r\n          price={item.price}\r\n          status={item.status}    \r\n          color={item.color}/>\r\n          \r\n        )}\r\n      />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grid;\r\n","import React, { Component } from \"react\";\n\n\nclass Footer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"footer\">\n        <hr />\n        <div className=\"row \">\n          <div className=\"col-lg-8 offset-lg-2\">\n            <ul className=\"footer__languages\">\n              <li>\n                <a >German</a>\n              </li>\n              <li>\n                <a >English</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\n\n\nclass NavigatorWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n   \n    const { component } = this.props;\n    return (\n      <div className=\"navigation\">\n        \n          <header>\n            <Header {...this.props} />\n          </header>\n        \n        {component}\n        <footer>\n          <Footer {...this.props} />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default NavigatorWrapper;\n","\nimport React, { Component } from \"react\";\nimport {Form, Input, Icon, Select,  Button, AutoComplete, message} from 'antd';\nimport { connect } from 'react-redux'\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    userCredentials:''\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll(this.callback);\n  };\n\n  callback = (err, values) => {\n      if (!err) {\n          this.props.onRegister(values)\n          message.success('User is registerd successfully', 6);\n      }\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n  \n\n    return (\n      <div style={{width:\"50%\", height:\"35%\",marginLeft:\"24%\", marginTop:\"9%\", marginBottom:\"12%\"}}>\n        <Form {...formItemLayout} onSubmit={this.handleSubmit} style={{marginLeft:\"150px\"}}>\n          <Form.Item >\n            {getFieldDecorator('email', {\n              rules: [\n                {\n                  type: 'email',\n                  message: 'The input is not valid E-mail!',\n                },\n                {\n                  required: true,\n                  message: 'Please input your E-mail!',\n                },\n              ],\n            })(<Input  prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email\"/> )}\n          </Form.Item>\n          <Form.Item  hasFeedback>\n            {getFieldDecorator('password', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input your password!',\n                },\n                {\n                  validator: this.validateToNextPassword,\n                },\n              ],\n            })(<Input.Password  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Passowrd\"/>)}\n          </Form.Item>\n          <Form.Item  hasFeedback>\n            {getFieldDecorator('confirm', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please confirm your password!',\n                },\n                {\n                  validator: this.compareToFirstPassword,\n                },\n              ],\n            })(<Input.Password onBlur={this.handleConfirmBlur}  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Confirm Passowrd\"/>)}\n          </Form.Item>\n          <Form.Item  >\n            <Button type=\"primary\" htmlType=\"submit\" style={{width:\"285px\"}} >\n              Register\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n      userIcon : state.email\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      onRegister : (values) => dispatch({type: 'REGISTRATIONED', userCredentials : values}),\n  };\n};\n\nconst RegForm = Form.create({ name: 'register' })(RegistrationForm);\n\nexport default  connect(mapStateToProps, mapDispatchToProps)( RegForm) ;","import React, { Component } from \"react\";\n\nimport Form from \"./Form\";\n\n\nclass FormValidation extends Component {\n \n  render() {\n   \n    return (\n      <Form />\n    );\n  }\n}\n\nexport default FormValidation;\n","import React, { Component } from \"react\";\r\nimport { DatePicker, Button, Alert, message,Layout } from 'antd';\r\nimport moment from 'moment';\r\nimport Grid from '../components/Grid'\r\n\r\n\r\n\r\n\r\nconst {Content } = Layout;\r\n\r\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\r\nconst dateFormat = 'MM/DD/YYYY';\r\nclass Layout_ extends Component {\r\n  \r\n  state = {\r\n    hinter_first: false,\r\n    hinter_Second: false,\r\n    duration:0.8,\r\n    filter:false,\r\n    start_date :'',\r\n    end_date:''\r\n  };\r\n\r\n  render() {\r\n    const { hinter_first, hinter_Second, duration } = this.state;\r\n      let hint = null;\r\n      if(hinter_first){\r\n        message.info('Select Start Date', duration);\r\n      }else if(hinter_Second){\r\n        message.info('Select End Date', duration);\r\n      }\r\n    return (\r\n      <Content>\r\n        <div style={{padding:\"20px\", marginLeft : \"30%\",display: \"flex\"}} >\r\n          <div style={{marginRight:\"20px\",display: \"flex\"}}>\r\n          <DatePicker  onChange={this.onStartDateChange} \r\n                        size=\"large\" \r\n                        format={dateFormat}\r\n                        onMouseEnter={this.onHintStartDate} \r\n                        onMouseLeave={this.onMouseleaveHinterFirst} >Start Date</DatePicker>\r\n          </div>          \r\n          <DatePicker  onChange={this.onEndDateChange} \r\n                        size=\"large\" \r\n                        format={dateFormat}\r\n                        onMouseEnter={this.onHintEtartDate} \r\n                        onMouseLeave={this.onMouseleaveHinterSecond}/>\r\n          <Button type=\"primary\" style={{marginLeft:\"5%\",paddingLeft:\"5%\",paddingRight:\"5%\"}} size=\"large\"\r\n           onClick={this.onFilter}>Filter</Button>\r\n        </div>\r\n        <div> <Grid {...this.state}/> </div>\r\n        </Content>\r\n    );\r\n  }\r\n\r\n  onFilter = ()=> {\r\n      this.setState({\r\n        filter : true\r\n      })\r\n}\r\n\r\n  onStartDateChange = (date, dateString)=> {\r\n    this.setState({\r\n      start_date : dateString\r\n    })\r\n   \r\n}\r\n\r\nonEndDateChange = (date, dateString)=> {\r\n  this.setState({\r\n    end_date : dateString\r\n  })\r\n}\r\n\r\n  onHintStartDate = ()=> {\r\n    this.setState({\r\n      hinter_first : true\r\n    })\r\n  }\r\n\r\n  onHintEtartDate = ()=> {\r\n    this.setState({\r\n      hinter_Second : true\r\n    })\r\n  }\r\n\r\n  onMouseleaveHinterFirst = ()=> {\r\n    this.setState({\r\n      hinter_first : false\r\n    })\r\n  }\r\n\r\n  onMouseleaveHinterSecond = ()=> {\r\n    this.setState({\r\n      hinter_Second : false\r\n    })\r\n  }\r\n}\r\n\r\nexport default Layout_;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Grid from '../components/Grid'\nimport NavigatorWrapper from \"./navigator/NavigatorWrapper\";\nimport FormValidation from '../pages/FormValidation';\nimport Layout from '../components/Layout';\nimport RegistrationForm from '../pages/Form'\nimport { connect } from 'react-redux'\n\n\nclass Navigatgor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          component={routeProps => (\n            <NavigatorWrapper\n              component={this.renderContent()}\n              {...routeProps}\n              {...this.props}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/form\"\n          component={routeProps => (\n            <NavigatorWrapper\n              component={<RegistrationForm {...routeProps} {...this.props} />}\n              {...routeProps}\n              {...this.props}\n            />\n          )}\n        />\n      </Switch>\n    );\n  }\n  renderContent = ()=> {\n    let componentContent = <Layout/>\n    if(this.props.form) {\n      componentContent = <RegistrationForm/>;\n    }\n    return componentContent;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n      form : state.form,\n      grid: state.grid\n  };\n};\n\nexport default connect(mapStateToProps) (Navigatgor);\n","import React, { Component } from \"react\";\nimport Header from './containers/Header'\nimport AppWraper from './containers/Navigator'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons'\nimport Raduim from 'radium'\n\nlibrary.add(faStroopwafel)\nclass App extends Component {\n  render() {\n   \n    return (\n      <div style={{ textAlign:\"center\"}}> \n        <AppWraper/>\n      </div>\n    );\n  }\n}\n\nexport default Raduim(App);\n","import { stat } from \"fs\";\r\n\r\n\r\nconst initialState = {\r\n    email:'',\r\n    Loading:false,\r\n    form : true\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    if(action.type === \"REGISTRATION_FORM\") {\r\n        return {\r\n            ...state,\r\n            form : true,\r\n            email:''\r\n        }\r\n    }\r\n    if(action.type === \"GRID\") {\r\n            return {\r\n                ...state,\r\n                form : false,\r\n            }\r\n    }\r\n    if(action.type === \"REGISTRATIONED\") {\r\n        return {\r\n            ...state,\r\n            email: action.userCredentials.email,\r\n            form : false,\r\n        }\r\n}\r\n    return state;\r\n};\r\n\r\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { createStore } from 'redux';\r\nimport reducer from './store/reducer';\r\nimport {Provider} from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n<BrowserRouter basename={process.env.PUBLIC_URL} > <Provider store ={store} > <App/> </Provider></BrowserRouter>, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}