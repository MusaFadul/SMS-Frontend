{"version":3,"sources":["logo.svg","containers/Header.js","components/Grid.js","containers/Footer.js","containers/navigator/NavigatorWrapper.js","pages/Form.js","pages/FormValidation.js","containers/Navigator.js","containers/AppWrapper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","Component","Dashboard","_this$props$location","location","search","pathname","searchItems","split","newPath","window","hostname","forEach","item","stra2","length","key","value","path","getWindowPathWithSearchParams","href","concat","NavigatorWrapper","component","containers_Header","Footer","GeneralInformation","htmlFor","id","for","type","FormValidation","Form","Navigatgor","_this2","react_router","exact","routeProps","navigator_NavigatorWrapper","assign","Grid","pages_FormValidation","AppWrapper","Navigator","App","containers_AppWrapper","Boolean","match","ReactDOM","render","react_router_dom","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57a4af76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\n\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n  \n    return (\n      <div className=\"row header-container u-background-color-white\">\n        <div className=\"col-lg-8 offset-lg-2\">\n          <div className=\"header header-primary\">\n            <div className=\"header__logo \">\n              <i className=\"fa fa-bars\" />\n            </div>\n           \n            <div className=\"header__user-area\">\n              <i className=\"fa fa-user\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\r\n\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n\r\n  \r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div className=\"dashboard u-padding-vertical-large\">\r\n        bgbgb\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getWindowPathWithSearchParams() {\n    const {\n      location: { search, pathname }\n    } = this.props;\n    const searchItems = search.split(\"?\");\n    const prefix = window.location.hostname === \"localhost\" ? \"\" : \"/flat\";\n    let newPath = prefix + pathname;\n    searchItems.forEach(item => {\n      const stra2 = item.split(\"=\");\n      if (stra2.length > 1) {\n        const key = stra2[0];\n        let value = stra2[1];\n        if (key !== \"locale\") {\n          newPath += \"?\" + key + \"=\" + value;\n        }\n      }\n    });\n\n    return newPath;\n  }\n\n  render() {\n    const path = this.getWindowPathWithSearchParams();\n    return (\n      <div className=\"footer\">\n        <hr />\n        <div className=\"row \">\n          <div className=\"col-lg-8 offset-lg-2\">\n            <ul className=\"footer__languages\">\n              <li>\n                <a href={`${path}?locale=ar`}>German</a>\n              </li>\n              <li>\n                <a href={`${path}?locale=en`}>English</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\n\nclass NavigatorWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { component } = this.props;\n    return (\n      <div className=\"navigation\">\n        <header>\n          <Header {...this.props} />\n        </header>\n        {component}\n        <footer>\n          <Footer {...this.props} />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default NavigatorWrapper;\n","import React, { Component } from \"react\";\n\nclass GeneralInformation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleFormControlSelect1\">Category *</label>\n          <select className=\"form-control\" id=\"exampleFormControlSelect1\">\n            <option>Choose ...</option>\n            <option>Flat</option>\n            <option>House</option>\n            <option>Land</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleFormControlSelect2\">Offer Type *</label>\n          <select className=\"form-control\" id=\"exampleFormControlSelect2\">\n            <option>Choose ...</option>\n            <option>Rent</option>\n            <option>Sell</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleFormControlSelect2\">Condition *</label>\n          <select className=\"form-control\" id=\"exampleFormControlSelect2\">\n            <option>Choose ...</option>\n            <option>Furnished</option>\n            <option>Un-furnished</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label for=\"inputZip\">Size (sqm)</label>\n          <input type=\"text\" className=\"form-control\" id=\"inputZip\" />\n        </div>\n        <div className=\"row\">\n          <div className=\"col col-sm-6\">\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlSelect2\">Available from</label>\n              <select className=\"form-control\" id=\"exampleFormControlSelect2\">\n                <option>Choose ...</option>\n                <option>Furnished</option>\n                <option>Un-furnished</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"col col-sm-6\">\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlSelect2\">To</label>\n              <select className=\"form-control\" id=\"exampleFormControlSelect2\">\n                <option>Choose ...</option>\n                <option>Furnished</option>\n                <option>Un-furnished</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default GeneralInformation;\n","import React, { Component } from \"react\";\n\nimport Form from \"./Form\";\n\n\nclass FormValidation extends Component {\n \n  render() {\n   \n    return (\n      <Form />\n    );\n  }\n}\n\nexport default FormValidation;\n","import React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Grid from '../components/Grid'\nimport NavigatorWrapper from \"./navigator/NavigatorWrapper\";\nimport FormValidation from '../pages/FormValidation';\n\nclass Navigatgor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          component={routeProps => (\n            <NavigatorWrapper\n              component={<Grid {...routeProps} {...this.props} />}\n              {...routeProps}\n              {...this.props}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/home\"\n          component={routeProps => (\n            <NavigatorWrapper\n              component={<Grid {...routeProps} {...this.props} />}\n              {...routeProps}\n              {...this.props}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/form\"\n          component={routeProps => (\n            <NavigatorWrapper\n              component={<FormValidation {...routeProps} {...this.props} />}\n              {...routeProps}\n              {...this.props}\n            />\n          )}\n        />\n      </Switch>\n    );\n  }\n}\n\nexport default Navigatgor;\n","import React, { Component } from \"react\";\nimport { IntlProvider, addLocaleData } from \"react-intl\";\nimport arLocaleData from \"react-intl/locale-data/ar\";\nimport esLocaleData from \"react-intl/locale-data/es\";\n\nimport Navigator from \"../containers/Navigator\";\n\n\n\nclass AppWrapper extends Component {\n\n\n   \n\n\n  \n\n  render() {\n   \n    return (\n     \n        <Navigator />\n      \n    );\n  }\n}\n\nexport default AppWrapper;\n","import React, { Component } from \"react\";\nimport Header from './containers/Header'\nimport AppWraper from './containers/AppWrapper'\n\n\nimport logo from \"./logo.svg\";\n\n\n\nclass App extends Component {\n  render() {\n   \n    return (\n      <div className=\"App\"> \n        <AppWraper/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<BrowserRouter basename={process.env.PUBLIC_URL} ><App/></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}